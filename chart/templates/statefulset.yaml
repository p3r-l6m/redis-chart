{{- $fullName := include "redis.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}-master
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    role: master
spec:
  serviceName: {{ $fullName }}-headless
  replicas: 1
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
      role: master
  template:
    metadata:
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
        role: master
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
          runAsNonRoot: true
          runAsUser: 999
        image: "{{ .Values.image.repository }}:{{ default "latest" .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - redis-server
        args:
        - "--requirepass"
        - "$(REDIS_PASSWORD)"
        - "--masterauth"
        - "$(REDIS_PASSWORD)"
        - "--dir"
        - "/data"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ $fullName }}
              key: redis-password
        ports:
        - name: redis
          containerPort: 6379
        resources:
          {{- toYaml .Values.resources.master | nindent 10 }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
  {{- else }}
      volumes:
      - name: redis-data
        emptyDir: {}
  {{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}-replica
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    role: replica
spec:
  serviceName: {{ $fullName }}-replica
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
      role: replica
  template:
    metadata:
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
        role: replica
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
          runAsNonRoot: true
          runAsUser: 999
        image: "{{ .Values.image.repository }}:{{ default "latest" .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - redis-server
        args:
        - "--replicaof"
        - "$(MASTER_HOST)"
        - "$(MASTER_PORT)"
        - "--requirepass"
        - "$(REDIS_PASSWORD)"
        - "--masterauth"
        - "$(REDIS_PASSWORD)"
        - "--dir"
        - "/data"
        env:
        - name: MASTER_HOST
          value: {{ $fullName }}-master
        - name: MASTER_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ $fullName }}
              key: redis-password
        ports:
        - name: redis
          containerPort: 6379
        resources:
          {{- toYaml .Values.resources.replica | nindent 10 }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
  {{- else }}
      volumes:
      - name: redis-data
        emptyDir: {}
  {{- end }}
